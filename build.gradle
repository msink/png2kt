plugins {
    id 'kotlin-multiplatform' version '1.3.0'
}

repositories {
    mavenCentral()
}

final def os = org.gradle.internal.os.OperatingSystem.current()

kotlin {
    final def nativePreset = os.isWindows() ? presets.mingwX64
                           : os.isLinux()   ? presets.linuxX64
                           : os.isMacOsX()  ? presets.macosX64
                           : /*unknown host*/ null
    targets {
        fromPreset(nativePreset, 'native') {
            compilations.main {
                outputKinds 'EXECUTABLE'
                cinterops {
                    libpng {
                        switch (nativePreset) {
                            case presets.mingwX64:
                                includeDirs "${System.getenv("MINGW64_DIR")?:"c:/msys64/mingw64"}/include"
                                break
                            case presets.linuxX64:
                                includeDirs.headerFilterOnly '/usr/include', '/usr/include/x86_64-linux-gnu'
                                break
                            case presets.macosX64:
                                includeDirs.headerFilterOnly '/opt/local/include', '/usr/local/include'
                                break
                        }
                    }
                }
                switch (nativePreset) {
                    case presets.mingwX64:
                        linkerOpts "-L${System.getenv("MINGW64_DIR")?:"c:/msys64/mingw64"}/lib -lpng"
                        break
                }
            }
        }
    }
}

task runProgram {
    def buildType = 'DEBUG' // 'RELEASE'
    dependsOn kotlin.targets.native.compilations.main.linkTaskName('EXECUTABLE', buildType)
    doLast {
        exec {
            executable kotlin.targets.native.compilations.main.getBinary('EXECUTABLE', buildType)
        }
    }
}
